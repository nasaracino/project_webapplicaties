// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWatchList.Data;

namespace MyWatchList.Migrations
{
    [DbContext(typeof(MyWatchListContext))]
    partial class MyWatchListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyWatchList.Models.Acteur", b =>
                {
                    b.Property<int>("ActeurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geboortejaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandVanHerkomst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActeurID");

                    b.ToTable("Acteur");
                });

            modelBuilder.Entity("MyWatchList.Models.Aflevering", b =>
                {
                    b.Property<int>("AfleveringID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeizoenID")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AfleveringID");

                    b.HasIndex("SeizoenID");

                    b.ToTable("Aflevering");
                });

            modelBuilder.Entity("MyWatchList.Models.Gebruiker", b =>
                {
                    b.Property<int>("GebruikerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isBeheerder")
                        .HasColumnType("bit");

                    b.HasKey("GebruikerID");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("MyWatchList.Models.GebruikerSerie", b =>
                {
                    b.Property<int>("GebruikerSerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<int>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("GebruikerSerieID");

                    b.HasIndex("GebruikerID");

                    b.HasIndex("SerieID");

                    b.ToTable("GebruikerSerie");
                });

            modelBuilder.Entity("MyWatchList.Models.Maakte", b =>
                {
                    b.Property<int>("MaakteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MakerID")
                        .HasColumnType("int");

                    b.Property<int>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("MaakteID");

                    b.HasIndex("MakerID");

                    b.HasIndex("SerieID");

                    b.ToTable("Maakte");
                });

            modelBuilder.Entity("MyWatchList.Models.Maker", b =>
                {
                    b.Property<int>("MakerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Geboortejaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandVanHerkomst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MakerID");

                    b.ToTable("Maker");
                });

            modelBuilder.Entity("MyWatchList.Models.Seizoen", b =>
                {
                    b.Property<int>("SeizoenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AantalAfleveringen")
                        .HasColumnType("int");

                    b.Property<string>("JaarVanUitkomst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerieID")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeizoenID");

                    b.HasIndex("SerieID");

                    b.ToTable("Seizoen");
                });

            modelBuilder.Entity("MyWatchList.Models.Serie", b =>
                {
                    b.Property<int>("SerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AantalSeizoenen")
                        .HasColumnType("int");

                    b.Property<string>("CoverImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JaarVanUitkomst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimumLeeftijd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SerieID");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("MyWatchList.Models.SpeeltIn", b =>
                {
                    b.Property<int>("SpeeltInID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActeurID")
                        .HasColumnType("int");

                    b.Property<string>("NaamInSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("SpeeltInID");

                    b.HasIndex("ActeurID");

                    b.HasIndex("SerieID");

                    b.ToTable("SpeeltIn");
                });

            modelBuilder.Entity("MyWatchList.Models.Aflevering", b =>
                {
                    b.HasOne("MyWatchList.Models.Seizoen", "Seizoen")
                        .WithMany("Afleveringen")
                        .HasForeignKey("SeizoenID");
                });

            modelBuilder.Entity("MyWatchList.Models.GebruikerSerie", b =>
                {
                    b.HasOne("MyWatchList.Models.Gebruiker", "Gebruiker")
                        .WithMany("GebruikerSeries")
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWatchList.Models.Serie", "Serie")
                        .WithMany("GebruikerSeries")
                        .HasForeignKey("SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWatchList.Models.Maakte", b =>
                {
                    b.HasOne("MyWatchList.Models.Maker", "Maker")
                        .WithMany("Maakte")
                        .HasForeignKey("MakerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWatchList.Models.Serie", "Serie")
                        .WithMany("Maakte")
                        .HasForeignKey("SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWatchList.Models.Seizoen", b =>
                {
                    b.HasOne("MyWatchList.Models.Serie", "Serie")
                        .WithMany("Seizoenen")
                        .HasForeignKey("SerieID");
                });

            modelBuilder.Entity("MyWatchList.Models.SpeeltIn", b =>
                {
                    b.HasOne("MyWatchList.Models.Acteur", "Acteur")
                        .WithMany("SpeeltIn")
                        .HasForeignKey("ActeurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWatchList.Models.Serie", "Serie")
                        .WithMany("SpeeltIn")
                        .HasForeignKey("SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
